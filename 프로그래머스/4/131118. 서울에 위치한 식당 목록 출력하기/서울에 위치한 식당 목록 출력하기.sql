/*
- 위치 = 서울
- 식당 ID, 식당 이름, 음식 종류, 즐겨찾기수, 주소, 리뷰 평균 점수
- 리뷰 평균 점수: 소수셋째 반올림
- 리뷰 평균 점수 내림차, 즐겨찾기수 내림차
1. 식당 ID로 조인
2. 주소 like 위치 조건설정
3. 식당 ID 그룹핑
4. avg, round.2
5. 평균점수 desc, 즐겨찾기수 desc
*/
# SELECT R.REST_ID, REST_NAME, FOOD_TYPE, FAVORITES, ROUND(AVG(REVIEW_SCORE), 2) AS SCORE
# FROM REST_INFO I JOIN REST_REVIEW R
# ON I.REST_ID = R.REST_ID
# WHERE ADDRESS LIKE '서울%'
# GROUP BY REST_NAME
# ORDER BY SCORE DESC, FAVORITES DESC
SELECT A.REST_ID,A.REST_NAME ,A.FOOD_TYPE,A.FAVORITES,A.ADDRESS,ROUND(AVG(B.REVIEW_SCORE),2) AS SCORE
FROM REST_INFO A INNER JOIN REST_REVIEW B 
    ON A.REST_ID = B.REST_ID
WHERE A.ADDRESS LIKE '서울%'
GROUP BY A.REST_ID
ORDER BY ROUND(AVG(B.REVIEW_SCORE),2)  DESC,A.FAVORITES DESC

# select * from REST_INFO

# SELECT *
# FROM REST_INFO I JOIN REST_REVIEW R
# ON I.REST_ID = R.REST_ID
# GROUP BY REST_NAME
# ORDER BY I.REST_ID

# SELECT REST_ID, ROUND(AVG(REVIEW_SCORE), 2) SCORE
# FROM REST_REVIEW
# GROUP BY REST_ID
# ORDER BY REST_ID